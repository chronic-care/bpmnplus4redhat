/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '5.1.0'    
}

group = 'com.perspecta.healthconcourse.bpmn'

if (!project.hasProperty("build_version")) {
    version = "1.0.0-SNAPSHOT"
}
else {
    version = build_version
}

description = 'ckd-treat-patient'
sourceCompatibility = '1.8'


repositories {
    mavenLocal()
    maven {
        url = uri('http://maven.repository.redhat.com/ga/')
    }

    maven {
        url = uri('https://nexus.healthconcourse.com/nexus/repository/maven-central/')
            credentials {
                username = "${dhpNexusUserName}"
                password = "${dhpNexusUserPassword}"
            }
    }

    maven {
        url = uri('https://nexus.healthconcourse.com/nexus/repository/maven-snapshots/')
            credentials {
                username = "${dhpNexusUserName}"
                password = "${dhpNexusUserPassword}"
            }
    }

    maven {
        url = uri('https://nexus.healthconcourse.com/nexus/repository/maven-releases/')
            credentials {
                username = "${dhpNexusUserName}"
                password = "${dhpNexusUserPassword}"
            }
    }

    maven {
        url = uri('http://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation platform('com.redhat.ba:ba-platform-bom:7.7.0.redhat-00002')

    implementation 'com.perspecta.healthconcourse.bpmn.handler:bpmn-handlers:1.0-RELEASE'
    testImplementation 'junit:junit:4.12'
    compileOnly 'org.kie:kie-internal:7.33.0.Final-redhat-00002'
    compileOnly 'org.jbpm:jbpm-workitems-rest:7.33.0.Final-redhat-00002'
    compileOnly 'org.jbpm:jbpm-workitems-core:7.33.0.Final-redhat-00002'
    compileOnly 'org.kie:kie-api:7.33.0.Final-redhat-00002'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "build/libs/${project.name}-${version}-all.jar"
        }
    }
    
    repositories {
        maven {
            def releasesRepoUrl = "${dhpNexusReleaseUrl}"
            def snapshotsRepoUrl = "${dhpNexusUrl}"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "${dhpNexusUserName}"
                password = "${dhpNexusUserPassword}"
            }
        }
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar{ }
